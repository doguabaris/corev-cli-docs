"use strict";(self.webpackChunkcorev_cli_docs=self.webpackChunkcorev_cli_docs||[]).push([[752],{5171:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"commands/push","title":"push","description":"Uploads a local configuration file to the remote API.","source":"@site/docs/commands/push.md","sourceDirName":"commands","slug":"/commands/push","permalink":"/corev-cli-docs/commands/push","draft":false,"unlisted":false,"editUrl":"https://github.com/doguabaris/corev-cli-docs/edit/main/docs/commands/push.md","tags":[],"version":"current","frontMatter":{"id":"push","title":"push"},"sidebar":"sidebar","previous":{"title":"pull","permalink":"/corev-cli-docs/commands/pull"},"next":{"title":"diff","permalink":"/corev-cli-docs/commands/diff"}}');var i=s(4848),o=s(8453);const c={id:"push",title:"push"},r="corev push",l={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Notes",id:"notes",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"corev-push",children:(0,i.jsx)(n.code,{children:"corev push"})})}),"\n",(0,i.jsx)(n.p,{children:"Uploads a local configuration file to the remote API."}),"\n",(0,i.jsxs)(n.p,{children:["The file must be named using the format: ",(0,i.jsx)(n.code,{children:"project@version.json"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"corev push <filepath>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"corev push configs/customer-panel@1.2.0.json\n"})}),"\n",(0,i.jsx)(n.p,{children:"This reads the specified file, extracts the project and version from its name, and sends it to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"POST /configs/customer-panel\n"})}),"\n",(0,i.jsx)(n.p,{children:"The body of the request is the file's contents."}),"\n",(0,i.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".corevrc.json"})," must exist with a valid ",(0,i.jsx)(n.code,{children:"api"})," base URL"]}),"\n",(0,i.jsx)(n.li,{children:"The target config file must exist and be valid JSON"}),"\n",(0,i.jsxs)(n.li,{children:["Filename format must be correct (",(0,i.jsx)(n.code,{children:"project@version.json"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The command does not validate the contents beyond JSON parsing"}),"\n",(0,i.jsx)(n.li,{children:"The version is taken from the filename, not the content"}),"\n",(0,i.jsx)(n.li,{children:"Response status code and message will be shown after push"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var t=s(6540);const i={},o=t.createContext(i);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);