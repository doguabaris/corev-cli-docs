"use strict";(self.webpackChunkcorev_cli_docs=self.webpackChunkcorev_cli_docs||[]).push([[166],{7265:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"api-specification","title":"API specification","description":"API specification","source":"@site/docs/api-specification.md","sourceDirName":".","slug":"/api-specification","permalink":"/api-specification","draft":false,"unlisted":false,"editUrl":"https://github.com/doguabaris/corev-cli-docs/edit/main/docs/api-specification.md","tags":[],"version":"current","frontMatter":{"id":"api-specification","title":"API specification"},"sidebar":"sidebar","previous":{"title":"list","permalink":"/commands/list"},"next":{"title":"Contributing","permalink":"/contributing"}}');var o=i(4848),r=i(8453);const s={id:"api-specification",title:"API specification"},c=void 0,d={},a=[{value:"API specification",id:"api-specification",level:2},{value:"HTTP mapping",id:"http-mapping",level:3},{value:"File naming",id:"file-naming",level:3},{value:"JSON schema",id:"json-schema",level:3},{value:"API contract (Recommended)",id:"api-contract-recommended",level:3},{value:"1 The <code>getLatestConfig()</code> method",id:"1-the-getlatestconfig-method",level:4},{value:"2 The <code>uploadConfig()</code> method",id:"2-the-uploadconfig-method",level:4},{value:"3 The <code>Configuration</code> dictionary",id:"3-the-configuration-dictionary",level:4},{value:"4 The <code>UploadResponse</code> dictionary",id:"4-the-uploadresponse-dictionary",level:4}];function l(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"api-specification",children:"API specification"}),"\n",(0,o.jsx)(n.h3,{id:"http-mapping",children:"HTTP mapping"}),"\n",(0,o.jsx)(n.admonition,{title:"Beware",type:"note",children:(0,o.jsxs)(n.p,{children:["Implementers SHOULD provide the endpoints listed below so Corev-CLI can perform ",(0,o.jsx)(n.code,{children:"pull"})," and ",(0,o.jsx)(n.code,{children:"push"})," operations correctly."]})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"HTTP Method"}),(0,o.jsx)(n.th,{children:"Endpoint URL"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"GET"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"/configs/:project/latest"})}),(0,o.jsx)(n.td,{children:"Returns the latest configuration"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"POST"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"/configs/:project"})}),(0,o.jsx)(n.td,{children:"Uploads a new or updated configuration"})]})]})]}),"\n",(0,o.jsx)(n.h3,{id:"file-naming",children:"File naming"}),"\n",(0,o.jsx)(n.p,{children:"All configuration files SHOULD follow the naming convention below:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"<project>@<version>.json\n"})}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"configs/atlas@1.0.0.json\n"})}),"\n",(0,o.jsx)(n.h3,{id:"json-schema",children:"JSON schema"}),"\n",(0,o.jsx)(n.p,{children:"Every configuration file SHOULD conform to the JSON schema below, which precisely defines the required structure and fields:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n\t"type": "object",\n\t"properties": {\n\t\t"name": {\n\t\t\t"type": "string"\n\t\t},\n\t\t"version": {\n\t\t\t"type": "string"\n\t\t},\n\t\t"config": {\n\t\t\t"type": "object",\n\t\t\t"additionalProperties": true\n\t\t}\n\t},\n\t"required": ["name", "version", "config"],\n\t"additionalProperties": false\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"api-contract-recommended",children:"API contract (Recommended)"}),"\n",(0,o.jsx)(n.admonition,{title:"Tip",type:"tip",children:(0,o.jsxs)(n.p,{children:["Sections 1, 2, 3, and 4 below describe a recommended API contract for compatibility with Corev-CLI. The specification is divided into two main parts: the methods (belonging to the ",(0,o.jsx)(n.code,{children:"ConfigService"})," interface) and the dictionaries (",(0,o.jsx)(n.code,{children:"Configuration"})," and ",(0,o.jsx)(n.code,{children:"UploadResponse"}),")."]})}),"\n",(0,o.jsxs)(n.h4,{id:"1-the-getlatestconfig-method",children:["1 The ",(0,o.jsx)(n.code,{children:"getLatestConfig()"})," method"]}),"\n",(0,o.jsxs)(n.p,{children:["Belongs to the ",(0,o.jsx)(n.strong,{children:"Corev ConfigService conformance class"}),".\nExpects a single argument, ",(0,o.jsx)(n.code,{children:"projectName"}),", which identifies the project. It returns a promise that resolves with a ",(0,o.jsx)(n.code,{children:"Configuration"})," object containing the latest configuration for that project."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-webidl",children:"partial interface ConfigService {\n  Promise<Configuration> getLatestConfig(DOMString projectName);\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["When this method is invoked, the implementation MUST retrieve the latest configuration from storage (or memory) and return it as a ",(0,o.jsx)(n.code,{children:"Configuration"})," object."]}),"\n",(0,o.jsx)(n.li,{children:"If the project is not found, the promise SHOULD reject with an appropriate error."}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"2-the-uploadconfig-method",children:["2 The ",(0,o.jsx)(n.code,{children:"uploadConfig()"})," method"]}),"\n",(0,o.jsxs)(n.p,{children:["Belongs to the ",(0,o.jsx)(n.strong,{children:"Corev ConfigService conformance class"}),".\nExpects two arguments:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"projectName"})," \u2014 a DOMString specifying the project."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"config"})," \u2014 a ",(0,o.jsx)(n.code,{children:"Configuration"})," object to be stored or updated."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-webidl",children:"partial interface ConfigService {\n  Promise<UploadResponse> uploadConfig(DOMString projectName, Configuration config);\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Behavior:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["When this method is invoked, the implementation MUST store or update the configuration for the specified project, then return an ",(0,o.jsx)(n.code,{children:"UploadResponse"})," indicating success or error."]}),"\n",(0,o.jsxs)(n.li,{children:["If a duplicate or lower version of a configuration is not allowed by policy, this method SHOULD reject with a ",(0,o.jsx)(n.code,{children:"409 Conflict"}),"-like error or return an appropriate error response in the ",(0,o.jsx)(n.code,{children:"UploadResponse"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"3-the-configuration-dictionary",children:["3 The ",(0,o.jsx)(n.code,{children:"Configuration"})," dictionary"]}),"\n",(0,o.jsx)(n.p,{children:"Represents the structure of a project configuration object."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-webidl",children:'dictionary Configuration {\n  required DOMString name;      // Project name (e.g., "atlas")\n  required DOMString version;   // Version string (e.g., "1.0.0")\n  required any config;          // JSON object with configuration data\n};\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Usage notes:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"name"}),' typically matches the project identifier (e.g., "atlas").']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"version"}),' can be any string representing a version (e.g., "1.0.0", "2025.04.13-alpha", etc.).']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"config"})," is an arbitrary JSON-like structure containing key-value pairs relevant to the configuration."]}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"4-the-uploadresponse-dictionary",children:["4 The ",(0,o.jsx)(n.code,{children:"UploadResponse"})," dictionary"]}),"\n",(0,o.jsx)(n.p,{children:"Defines the response returned after a successful (or failed) configuration upload."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-webidl",children:'dictionary UploadResponse {\n  required DOMString status;    // "success" or "error"\n  DOMString? message;           // Optional message with details\n};\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Usage notes:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"status"})," MUST be either ",(0,o.jsx)(n.code,{children:'"success"'})," or ",(0,o.jsx)(n.code,{children:'"error"'}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"message"})," MAY be provided to give further context, such as error details or confirmations."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(6540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);